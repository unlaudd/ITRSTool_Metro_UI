<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtLogin.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAepJREFUOE+lkd9Lk1Ech/tbQrDLrqJgyegqoR8ElRE1m7MuJCPbwjWLlWkL5pIs
        wy4sG5u2Qp1g+51bSeYa6MYrm80biyghDaaBF/m+T++2Q/Nl3UQPfDkX5/Ocz+GcHfwHf5XDkhtH1EBn
        6DjdkdMEpSGxo6VKjmW99E43MzRnU6cDT/om5ld1hKRnIlGhSr4TOYVn/jovpG68aTv3Z5ppC+zlRuCI
        SFTQygrcS5zlUdLIYKqF/lkjXfHDWEI6rgUOilCFquaJ+V61uZXRBRvDGTMDSRMdkQP0J9pEokL1g6nt
        wQUX0byTydxt3OlL9L09Lza1VMnScpxozknq0yCvl1y8lNpxvjlBPOsTiQoa+ctaHnfqIpmvo6r8hFi+
        R5Wt9M2coWVsN0srGZEso5HdszYmFx28U8XIx7ula3vSl3FNN3AlsI+emEkky/yRNzbXsQfrCecf4M/e
        KjUOZyylB+ucOoQlqKN1bA8/NwvC2CavFD6XrjaRc/E4eYGBDyYevm/EkThGe0jP1VAdTb5aVte/CUMj
        L3POV8PTOStdiaOl/7VP1WMNF8X96ugwjOxkbWObrCgK8pbMj8Iq9vGTmMf1GEdqMXhraFSnuDY934XZ
        r8fub1Bz39n6JSPLcrm5eMC/UMwrisJv198E/M9SFlwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="txtPass.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAAcFJREFUOE+lkU1rU0EUhq/YZFFCKaIbRReiLt27EN2KP6KgP8HfUBE3olQQBXFh
        BbGgia20aZOoIdUigS6kBEwiiUJtkzY3yc39nJnHyTQihaQWfOEwzJz3OcO8Y/EfMvDOZoner1XsrXWU
        OT6cDPxx4QEb6RuIH9O4ds00DiMDR7t55h9fpfZhiqB6G8eumua/9PfNdob0o3OUl67gFK8RysH5AdoX
        WO/nLOmZBNWF81CZol1PDjrDtQ/uSzXnWLwfo5o6RvjpKN3KDL69jrudxd0pIkQwcA6BjRrPSE1bVN6d
        go1LBJ9PEBTG8NfO0C3dIvS2jG04rNUq3aGZvwhrcVRB21aPgF5lIUanfJd+JCNhbztPmNbmXAyRG0e8
        H0dmxyBj4eRO69sbo+Hutyd4bzScSSBWEsjlGG7uLGHmOJ23cUKnfgBcm8d5peGlCcTiJOFrS4f2Bbf8
        lN05vfeao2EpQlrL1wleWoiUvj0ZR2QvYycv0P760HgspRRRFOH7Pp7n4bruXvkKu/GdzZWbtGYnaT2f
        oPniJI3iPQKdlpRqD5ZS6v8TpvqD/pTQ0yNtDDp1wnaNoNc0KWsOpRS/AZNrL2JLdzBVAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>